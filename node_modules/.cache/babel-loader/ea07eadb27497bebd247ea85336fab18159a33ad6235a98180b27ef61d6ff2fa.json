{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\urdan\\\\playlist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\nimport Playlist from './Playlist';\n//import styles from './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { transformInput, generateId } from './helperFunctions';\n//import Songs from './Songs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = {\n  backgroundColor: \"#27415C\",\n  marginTop: -30\n};\nconst title = {\n  color: \"#A2C2E1\",\n  textAlign: \"center\",\n  paddingTop: 50\n};\nconst container = {\n  backgroundColor: \"#A2C2E1\",\n  width: 900,\n  height: 700,\n  marginLeft: 160,\n  marginRight: 160\n};\nconst span = {\n  color: \"#ffff\"\n};\nconst resultAndPlaylist = {\n  display: \"flex\"\n};\n\n// App component este parent pt SearchBar component, da props \nfunction App() {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  // controlam starea la songs obtinute de la server\n  //const [resultSongs, setResultSongs]= useState(null);  // nu avem nevoie de asta\n\n  // controlam starea la Songs afisate. toate odata vor fi afisate, viewSongs e un array de obiecte\n  const [songsList, setSongsList] = useState([]);\n  /*\n     viewSong = {\n      id : number de la functie\n      title : \n      album:\n      preview: src\n    }\n  */\n\n  // async function, fetch songs list bye artist from rapidapi.com, returns promise \"songs\"\n  const getSongsbyArtist = async artist => {\n    // datas for API request\n    const baseUrl = 'https://deezerdevs-deezer.p.rapidapi.com/search';\n    const transformedSearchInput = transformInput(artist);\n    const requestParams = `?q=${transformedSearchInput}`;\n    const url = `${baseUrl}${requestParams}`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': '48ae9bfa21mshf797af22061bc12p1069a4jsn184cf3cad960',\n        'X-RapidAPI-Host': 'deezerdevs-deezer.p.rapidapi.com'\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        const songs = jsonResponse.data;\n        return songs; // ! Important\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // consuma promisiunea ce o primim  de la  getSongsbyArtist()\n  const showSongs = async () => {\n    let songs = await getSongsbyArtist(searchInput);\n    console.log(\"Show Songs: \");\n    console.log(songs); // aici avem arayy (25)\n    //  facem ceva cu promisiunea\n    //let song = songs[0]; // primul obiect song din sirul de 25 songs cu toate atributele\n    //console.log(song);\n    // array de obiecte cu atributele specifice ce le vrem\n    const songsArray = [];\n    for (let song in songs) {\n      const songObject = {\n        id: generateId(),\n        title: song.title,\n        album: song.album.title,\n        preview: song.preview\n      };\n      songsArray.push(songObject);\n      //console.log(songObject); // doar obiectul cu 3 atribute\n    }\n\n    setSongsList(songsArray); // state of the son\n    console.log(\"songList: \");\n    console.log(songsList);\n  };\n  function handleChangeInput(e) {\n    e.preventDefault();\n    setSearchInput(e.target.value);\n  }\n\n  // onClickSearch prop pt search button\n  // doar cand apas pe buton vrem sa ceara lista de songs de la pagina web\n  function handleClickSearchButton(e) {\n    // previne sa revina la starea initiala , deci nu mai dispare rezultatul\n    e.preventDefault();\n    // consuma promisiunea si schimba starea de la setResultSongs cu raspunsul, adica songs\n    // facem aici cererea la server, altfel, de cate ori tastam o litera in input field\n    // se schimba starea lui searchInput si se face cererea la server automat, app crashes\n    showSongs(); // chemam functia async ce a consumat promisiunea intoarsa de la request\n  }\n\n  // JSX expresion to return \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: app,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: title,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: span,\n        children: \"LISTEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }, this), \"your favorite\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: span,\n        children: \"MUSIC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: container,\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchInput: searchInput,\n        onChangeInput: handleChangeInput,\n        onClickSearch: handleClickSearchButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: resultAndPlaylist,\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          songs: songsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+Mwydhme3G/T25uxUk466duQkz0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["SearchBar","SearchResults","Playlist","React","useState","useEffect","transformInput","generateId","jsxDEV","_jsxDEV","app","backgroundColor","marginTop","title","color","textAlign","paddingTop","container","width","height","marginLeft","marginRight","span","resultAndPlaylist","display","App","_s","searchInput","setSearchInput","songsList","setSongsList","getSongsbyArtist","artist","baseUrl","transformedSearchInput","requestParams","url","options","method","headers","response","fetch","ok","jsonResponse","json","songs","data","error","console","showSongs","log","songsArray","song","songObject","id","album","preview","push","handleChangeInput","e","preventDefault","target","value","handleClickSearchButton","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onChangeInput","onClickSearch","_c","$RefreshReg$"],"sources":["C:/Users/urdan/playlist/src/App.js"],"sourcesContent":["import SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\nimport Playlist from './Playlist';\n//import styles from './App.css';\nimport React, {useState, useEffect} from 'react';\nimport {transformInput, generateId} from './helperFunctions';\n//import Songs from './Songs';\n\nconst app ={\n   backgroundColor: \"#27415C\",\n   marginTop: -30\n};\n\nconst title= {\n   color: \"#A2C2E1\",\n   textAlign: \"center\",\n   paddingTop: 50\n};\n\nconst container = {\n  backgroundColor: \"#A2C2E1\",\n  width : 900,\n  height: 700,\n  marginLeft: 160,\n  marginRight : 160\n\n};\n\nconst span={\n  color: \"#ffff\"\n};\n\nconst resultAndPlaylist={\n   display: \"flex\",\n   \n};\n\n\n// App component este parent pt SearchBar component, da props \nfunction App() {\n  const [searchInput, setSearchInput] = useState(\"\");\n  // controlam starea la songs obtinute de la server\n  //const [resultSongs, setResultSongs]= useState(null);  // nu avem nevoie de asta\n\n  // controlam starea la Songs afisate. toate odata vor fi afisate, viewSongs e un array de obiecte\n  const [songsList, setSongsList] =useState([]); \n/*\n   viewSong = {\n    id : number de la functie\n    title : \n    album:\n    preview: src\n  }\n*/\n  \n\n// async function, fetch songs list bye artist from rapidapi.com, returns promise \"songs\"\n  const getSongsbyArtist= async(artist) =>{\n    // datas for API request\n    const baseUrl = 'https://deezerdevs-deezer.p.rapidapi.com/search';\n    const transformedSearchInput = transformInput(artist);\n    const requestParams =`?q=${transformedSearchInput}`;\n    const url = `${baseUrl}${requestParams}`;\n\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': '48ae9bfa21mshf797af22061bc12p1069a4jsn184cf3cad960',\n        'X-RapidAPI-Host': 'deezerdevs-deezer.p.rapidapi.com'\n      }\n    };\n\n    try {\n      const response = await fetch(url, options);\n      if(response.ok){\n        const jsonResponse = await response.json();\n        const songs = jsonResponse.data;\n        return  songs; // ! Important\n      }\n  \n    }catch (error) {\n      console.error(error);\n     }   \n  } \n  \n\n  // consuma promisiunea ce o primim  de la  getSongsbyArtist()\n  const showSongs = async()=>{\n     let songs = await getSongsbyArtist(searchInput);\n     console.log(\"Show Songs: \");\n     console.log(songs); // aici avem arayy (25)\n     //  facem ceva cu promisiunea\n     //let song = songs[0]; // primul obiect song din sirul de 25 songs cu toate atributele\n     //console.log(song);\n     // array de obiecte cu atributele specifice ce le vrem\n     const songsArray = []; \n     for (let song in songs){\n      const songObject ={\n        id :generateId() ,\n        title: song.title,\n        album: song.album.title,\n        preview: song.preview,\n       };\n       \n       songsArray.push(songObject);\n       //console.log(songObject); // doar obiectul cu 3 atribute\n\n     }\n     setSongsList(songsArray); // state of the son\n     console.log(\"songList: \");\n     console.log(songsList);\n  }\n\n  function handleChangeInput(e){\n     e.preventDefault();\n     setSearchInput(e.target.value);\n  }\n \n\n\n  // onClickSearch prop pt search button\n  // doar cand apas pe buton vrem sa ceara lista de songs de la pagina web\n  function handleClickSearchButton(e){\n    // previne sa revina la starea initiala , deci nu mai dispare rezultatul\n    e.preventDefault();\n    // consuma promisiunea si schimba starea de la setResultSongs cu raspunsul, adica songs\n    // facem aici cererea la server, altfel, de cate ori tastam o litera in input field\n    // se schimba starea lui searchInput si se face cererea la server automat, app crashes\n    showSongs();// chemam functia async ce a consumat promisiunea intoarsa de la request\n    \n  }\n  \n  // JSX expresion to return \n  return (\n    <div style={app}>\n      <h1 style={title}><span style={span}>LISTEN</span>your favorite<span style={span}>MUSIC</span></h1>\n      <div style={container}>\n        <SearchBar searchInput={searchInput} onChangeInput={handleChangeInput} onClickSearch={handleClickSearchButton} />\n        <div style={resultAndPlaylist}>\n          <SearchResults songs={songsList}/>\n          <Playlist/>\n        </div> \n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}