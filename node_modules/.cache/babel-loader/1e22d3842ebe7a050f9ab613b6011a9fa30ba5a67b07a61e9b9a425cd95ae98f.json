{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\urdan\\\\playlist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\nimport Playlist from './Playlist';\n//import styles from './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { transformInput, generateId } from './helperFunctions';\nimport Songs from './Songs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = {\n  backgroundColor: \"#27415C\",\n  marginTop: -30\n};\nconst title = {\n  color: \"#A2C2E1\",\n  textAlign: \"center\",\n  paddingTop: 50\n};\nconst container = {\n  backgroundColor: \"#A2C2E1\",\n  width: 900,\n  height: 700,\n  marginLeft: 160,\n  marginRight: 160\n};\nconst span = {\n  color: \"#ffff\"\n};\nconst resultAndPlaylist = {\n  display: \"flex\"\n};\n\n// App component este parent pt SearchBar component, da props \nfunction App() {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  // controlam starea la songs obtinute de la server\n  const [resultSongs, setResultSongs] = useState(null);\n  // controlam starea la Songs afisate. toate odata vor fi afisate\n  // viewSongs e un array de obiecte\n  const [viewSongs, setViewSongs] = useState([]);\n  /*\n     viewSong = {\n      id : number de la functie\n      title : \n      album:\n      preview: src\n    }\n  */\n\n  // display songs\n  function display(songs) {\n    console.log(\"The list of searched songs: \");\n    for (let i = 0; i < songs.length; i++) {\n      console.log(songs[i]);\n    }\n  }\n  // async function, fetch songs list bye artist from rapidapi.com, returns promise \"songs\"\n  const getSongsbyArtist = async artist => {\n    // datas for API request\n    const baseUrl = 'https://deezerdevs-deezer.p.rapidapi.com/search';\n    const transformedSearchInput = transformInput(artist);\n    const requestParams = `?q=${transformedSearchInput}`;\n    const url = `${baseUrl}${requestParams}`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': '48ae9bfa21mshf797af22061bc12p1069a4jsn184cf3cad960',\n        'X-RapidAPI-Host': 'deezerdevs-deezer.p.rapidapi.com'\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        //console.log(\"Promise response\");\n        //console.log(jsonResponse.data); // array data: [{}...]\n        const songs = jsonResponse.data;\n        return songs; // ! Important\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // consuma promisiunea getSongsbyArtist\n  const showSongs = async () => {\n    let songs = await getSongsbyArtist(searchInput);\n    console.log(\"Show Songs: \");\n    console.log(songs);\n    // aici facem ceva cu promisiunea, adica sirul de songs\n    let song = songs[0];\n    const songObject = {\n      title: song.title,\n      album: song.album.title,\n      preview: song.preview\n    };\n    console.log(songObject);\n    setViewSongs(songObject);\n  };\n  function handleChangeInput(e) {\n    e.preventDefault();\n    setSearchInput(e.target.value);\n  }\n  function addSong(song) {\n    setViewSongs(prev => {\n      return [song, ...prev];\n    });\n  }\n\n  // onClickSearch prop, Butonul\n  // doar cand apas pe buton vrem sa ceara lista de songs de la pagina web\n  function handleClickSearchButton(e) {\n    // previne sa revina la starea initiala , deci nu mai dispare rezultatul\n    e.preventDefault();\n    // consuma promisiunea si schimba starea de la setResultSongs cu raspunsul, adica songs\n    // facem aici cererea la server, altfel, de cate ori tastam o litera in input field\n    // se schimba starea lui searchInput si se face cererea la server automat, app crashes\n    showSongs();\n    /*\n    listSongs= showSongs();\n    console.log(\"the list of songs:\");\n    console.log(listSongs);\n    */\n\n    //display(resultSongs); // sa vedem in consola songs\n    //cand apasam butonul ne creaza un song object din rezultat\n    /*\n    if(resultSongs.length !== 0){\n      const song = {\n          id: generateId(),\n          title: resultSongs[0].title,\n          album: resultSongs[0].album.title,\n          preview : resultSongs[0].preview,\n      };\n      console.log(song);\n      addSong(song);\n    } */\n  }\n\n  // JSX expresion to return \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: app,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: title,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: span,\n        children: \"LISTEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }, this), \"your favorite\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: span,\n        children: \"MUSIC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: container,\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchInput: searchInput,\n        onChangeInput: handleChangeInput,\n        onClickSearch: handleClickSearchButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: resultAndPlaylist,\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: vie.map(thought => /*#__PURE__*/_jsxDEV(Thought, {\n          thought: thought,\n          removeThought: removeThought\n        }, thought.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Vvg4KUFMt5DwuKyQZAvU4SSOP/g=\");\n_c = App;\nexport default App;\n\n/*\n<ul className=\"thoughts\">\n          {viewSongs.map((song) => (\n            <Songs key={song.id} song={song}/>\n          ))}\n        </ul>\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["SearchBar","SearchResults","Playlist","React","useState","useEffect","transformInput","generateId","Songs","jsxDEV","_jsxDEV","app","backgroundColor","marginTop","title","color","textAlign","paddingTop","container","width","height","marginLeft","marginRight","span","resultAndPlaylist","display","App","_s","searchInput","setSearchInput","resultSongs","setResultSongs","viewSongs","setViewSongs","songs","console","log","i","length","getSongsbyArtist","artist","baseUrl","transformedSearchInput","requestParams","url","options","method","headers","response","fetch","ok","jsonResponse","json","data","error","showSongs","song","songObject","album","preview","handleChangeInput","e","preventDefault","target","value","addSong","prev","handleClickSearchButton","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onChangeInput","onClickSearch","vie","map","thought","Thought","removeThought","id","_c","$RefreshReg$"],"sources":["C:/Users/urdan/playlist/src/App.js"],"sourcesContent":["import SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\nimport Playlist from './Playlist';\n//import styles from './App.css';\nimport React, {useState, useEffect} from 'react';\nimport {transformInput, generateId} from './helperFunctions';\nimport Songs from './Songs';\n\nconst app ={\n   backgroundColor: \"#27415C\",\n   marginTop: -30\n};\n\nconst title= {\n   color: \"#A2C2E1\",\n   textAlign: \"center\",\n   paddingTop: 50\n};\n\nconst container = {\n  backgroundColor: \"#A2C2E1\",\n  width : 900,\n  height: 700,\n  marginLeft: 160,\n  marginRight : 160\n\n};\n\nconst span={\n  color: \"#ffff\"\n};\n\nconst resultAndPlaylist={\n   display: \"flex\",\n   \n};\n\n\n// App component este parent pt SearchBar component, da props \nfunction App() {\n  const [searchInput, setSearchInput] = useState(\"\");\n  // controlam starea la songs obtinute de la server\n  const [resultSongs, setResultSongs]= useState(null);  \n  // controlam starea la Songs afisate. toate odata vor fi afisate\n  // viewSongs e un array de obiecte\n  const [viewSongs, setViewSongs] =useState([\n]); \n/*\n   viewSong = {\n    id : number de la functie\n    title : \n    album:\n    preview: src\n  }\n*/\n  \n\n  // display songs\n  function display(songs){\n    console.log(\"The list of searched songs: \");\n    for (let i=0; i< songs.length; i ++){\n      console.log(songs[i]);\n    }\n   \n  }\n// async function, fetch songs list bye artist from rapidapi.com, returns promise \"songs\"\n  const getSongsbyArtist= async(artist) =>{\n    // datas for API request\n    const baseUrl = 'https://deezerdevs-deezer.p.rapidapi.com/search';\n    const transformedSearchInput = transformInput(artist);\n    const requestParams =`?q=${transformedSearchInput}`;\n    const url = `${baseUrl}${requestParams}`;\n\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': '48ae9bfa21mshf797af22061bc12p1069a4jsn184cf3cad960',\n        'X-RapidAPI-Host': 'deezerdevs-deezer.p.rapidapi.com'\n      }\n    };\n\n    try {\n      const response = await fetch(url, options);\n      if(response.ok){\n        const jsonResponse = await response.json();\n        //console.log(\"Promise response\");\n        //console.log(jsonResponse.data); // array data: [{}...]\n        const songs = jsonResponse.data;\n        return  songs; // ! Important\n      }\n  \n    }catch (error) {\n      console.error(error);\n     }   \n  } \n  \n  // consuma promisiunea getSongsbyArtist\n  const showSongs = async()=>{\n     let songs = await getSongsbyArtist(searchInput);\n     console.log(\"Show Songs: \");\n     console.log(songs);\n     // aici facem ceva cu promisiunea, adica sirul de songs\n     let song = songs[0];\n     const songObject ={\n      title: song.title,\n      album: song.album.title,\n      preview: song.preview,\n     };\n     console.log(songObject);\n     setViewSongs(songObject);\n  }\n\n  function handleChangeInput(e){\n     e.preventDefault();\n     setSearchInput(e.target.value);\n  }\n \n function addSong(song){\n  setViewSongs((prev)=>{\n    return [song, ...prev];\n  });\n }\n\n  // onClickSearch prop, Butonul\n  // doar cand apas pe buton vrem sa ceara lista de songs de la pagina web\n  function handleClickSearchButton(e){\n    // previne sa revina la starea initiala , deci nu mai dispare rezultatul\n    e.preventDefault();\n    // consuma promisiunea si schimba starea de la setResultSongs cu raspunsul, adica songs\n    // facem aici cererea la server, altfel, de cate ori tastam o litera in input field\n    // se schimba starea lui searchInput si se face cererea la server automat, app crashes\n    showSongs();\n    /*\n    listSongs= showSongs();\n    console.log(\"the list of songs:\");\n    console.log(listSongs);\n    */\n\n    //display(resultSongs); // sa vedem in consola songs\n    //cand apasam butonul ne creaza un song object din rezultat\n    /*\n    if(resultSongs.length !== 0){\n      const song = {\n          id: generateId(),\n          title: resultSongs[0].title,\n          album: resultSongs[0].album.title,\n          preview : resultSongs[0].preview,\n      };\n      console.log(song);\n      addSong(song);\n    } */\n    \n  }\n  \n  // JSX expresion to return \n  return (\n    <div style={app}>\n      <h1 style={title}><span style={span}>LISTEN</span>your favorite<span style={span}>MUSIC</span></h1>\n      <div style={container}>\n        <SearchBar searchInput={searchInput} onChangeInput={handleChangeInput} onClickSearch={handleClickSearchButton} />\n        <div style={resultAndPlaylist}>\n          <SearchResults />\n          <Playlist/>\n        </div> \n        <ul >\n          {vie.map((thought) => (\n            <Thought key={thought.id} thought={thought} removeThought= {removeThought} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n\n/*\n<ul className=\"thoughts\">\n          {viewSongs.map((song) => (\n            <Songs key={song.id} song={song}/>\n          ))}\n        </ul>\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}