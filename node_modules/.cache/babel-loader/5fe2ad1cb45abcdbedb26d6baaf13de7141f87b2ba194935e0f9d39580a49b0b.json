{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\urdan\\\\playlist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\nimport Playlist from './Playlist';\nimport styles from './App.css';\nimport React, { useState } from 'react';\nimport { transformInput, generateId } from './helperFunctions';\n//import Songs from './Songs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = {\n  backgroundColor: \"#27415C\",\n  marginTop: -30\n};\nconst title = {\n  color: \"#A2C2E1\",\n  textAlign: \"center\",\n  paddingTop: 50\n};\nconst container = {\n  backgroundColor: \"#A2C2E1\",\n  width: 900,\n  height: 2600,\n  marginLeft: 160,\n  marginRight: 160\n};\nconst span = {\n  color: \"#ffff\"\n};\nconst resultAndPlaylist = {\n  display: \"flex\",\n  flexWrap: \"wrap\"\n};\n\n// App component este parent pt SearchBar component, da props \nfunction App() {\n  _s();\n  // control the  state of  input field\n  const [searchInput, setSearchInput] = useState(\"\");\n  // control the  state of  songs rendered in Results , songsList : array of objects\n  const [songsList, setSongsList] = useState([]);\n  // control the  state of  songs rendered in Playlist \n  const [songsPlaylist, setSongsPlaylist] = useState([]);\n\n  // async function, fetch songs list bye artist from rapidapi.com, returns promise \"songs\"\n  const getSongsbyArtist = async artist => {\n    // datas for API request\n    const baseUrl = 'https://deezerdevs-deezer.p.rapidapi.com/search';\n    const transformedSearchInput = transformInput(artist);\n    const requestParams = `?q=${transformedSearchInput}`;\n    const url = `${baseUrl}${requestParams}`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': '48ae9bfa21mshf797af22061bc12p1069a4jsn184cf3cad960',\n        'X-RapidAPI-Host': 'deezerdevs-deezer.p.rapidapi.com'\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        const songs = jsonResponse.data;\n        return songs; // ! Important\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // consuma promisiunea ce o primim  de la  getSongsbyArtist()\n  const showSongs = async () => {\n    let songs = await getSongsbyArtist(searchInput);\n    console.log(\"Show Songs: \");\n    console.log(songs); // aici avem arayy (25)\n    //  facem ceva cu promisiunea\n    //let song = songs[0]; // primul obiect song din sirul de 25 songs cu toate atributele\n    //console.log(song);\n\n    // array de obiecte cu atributele specifice ce le vrem\n    const songsArray = [];\n    console.log(\"songs array \");\n    console.log(songsArray);\n    for (let song of songs) {\n      let songObject = {\n        id: generateId(),\n        artist: song.artist.name,\n        title: song.title,\n        album: song.album.title,\n        preview: song.preview\n      };\n      songsArray.push(songObject);\n      //console.log(songObject); // doar obiectul cu 3 atribute\n    }\n\n    setSongsList(songsArray); // state of the songsLista va fi arrayul creat din songs\n  };\n\n  function handleChangeInput(e) {\n    e.preventDefault();\n    setSearchInput(e.target.value);\n  }\n\n  // onClickSearch prop pt search button\n  // doar cand apas pe buton vrem sa ceara lista de songs de la pagina web\n  function handleClickSearchButton(e) {\n    // previne sa revina la starea initiala , deci nu mai dispare rezultatul\n    e.preventDefault();\n    // consuma promisiunea si schimba starea de la setResultSongs cu raspunsul, adica songs\n    // facem aici cererea la server, altfel, de cate ori tastam o litera in input field\n    // se schimba starea lui searchInput si se face cererea la server automat, app crashes\n    showSongs(); // chemam functia async ce a consumat promisiunea intoarsa de la request\n  }\n\n  // function updates the state of songPlaylist\n  // nu mai tre if aici,doar in handle function\n  function addSongtoPlaylist(song) {\n    if (songsPlaylist.includes(song) === false) {\n      setSongsPlaylist(prev => {\n        return [song, ...prev];\n      });\n    }\n  }\n\n  // + button, cand il apasam , adauga piesa corespunzatoare in Playlist list\n  function handleClickAddSong(id) {\n    // let playlist = [];\n    // adaugam un obiect song in state, nu lista, ca si la result. aici una cate una se adauga\n    // in result se adaugau toate odata , deci trebuia creata toata lista odata\n    let playlist = {};\n    for (let i = 0; i < songsList.length; i++) {\n      if (songsList[i].id === id && songsPlaylist.includes(playlist) === false) {\n        //playlist.push(songsList[i]);\n        playlist = songsList[i];\n      }\n    }\n\n    //setSongsPlaylist(playlist); \n    addSongtoPlaylist(playlist);\n    console.log(\"Songs from playlist:\");\n    console.log(songsPlaylist);\n  }\n\n  // JSX expresion to return \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: app,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: title,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: span,\n        children: \"LISTEN2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }, this), \"your favorite\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: span,\n        children: \"MUSIC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 71\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: container,\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchInput: searchInput,\n        onChangeInput: handleChangeInput,\n        onClickSearch: handleClickSearchButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: resultAndPlaylist,\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          songs: songsList,\n          onClickHandle: handleClickAddSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          songs: songsPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9V537Ua874ndLpXVMAZHqSod+d4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["SearchBar","SearchResults","Playlist","styles","React","useState","transformInput","generateId","jsxDEV","_jsxDEV","app","backgroundColor","marginTop","title","color","textAlign","paddingTop","container","width","height","marginLeft","marginRight","span","resultAndPlaylist","display","flexWrap","App","_s","searchInput","setSearchInput","songsList","setSongsList","songsPlaylist","setSongsPlaylist","getSongsbyArtist","artist","baseUrl","transformedSearchInput","requestParams","url","options","method","headers","response","fetch","ok","jsonResponse","json","songs","data","error","console","showSongs","log","songsArray","song","songObject","id","name","album","preview","push","handleChangeInput","e","preventDefault","target","value","handleClickSearchButton","addSongtoPlaylist","includes","prev","handleClickAddSong","playlist","i","length","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onChangeInput","onClickSearch","onClickHandle","_c","$RefreshReg$"],"sources":["C:/Users/urdan/playlist/src/App.js"],"sourcesContent":["import SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\nimport Playlist from './Playlist';\nimport styles from './App.css';\nimport React, {useState} from 'react';\nimport {transformInput, generateId} from './helperFunctions';\n//import Songs from './Songs';\n\nconst app ={\n   backgroundColor: \"#27415C\",\n   marginTop: -30,\n\n    \n};\n\nconst title= {\n   color: \"#A2C2E1\",\n   textAlign: \"center\",\n   paddingTop: 50,\n};\n\nconst container = {\n  backgroundColor: \"#A2C2E1\",\n  width : 900,\n  height: 2600,\n  marginLeft: 160,\n  marginRight : 160,\n\n};\n\nconst span={\n  color: \"#ffff\"\n};\n\n\nconst resultAndPlaylist={\n  display: \"flex\",\n  flexWrap: \"wrap\",\n   \n}\n\n\n// App component este parent pt SearchBar component, da props \nfunction App() {\n  // control the  state of  input field\n  const [searchInput, setSearchInput] = useState(\"\");\n  // control the  state of  songs rendered in Results , songsList : array of objects\n  const [songsList, setSongsList] =useState([]); \n  // control the  state of  songs rendered in Playlist \n  const [songsPlaylist, setSongsPlaylist] = useState([]);\n  \n\n// async function, fetch songs list bye artist from rapidapi.com, returns promise \"songs\"\n  const getSongsbyArtist= async(artist) =>{\n    // datas for API request\n    const baseUrl = 'https://deezerdevs-deezer.p.rapidapi.com/search';\n    const transformedSearchInput = transformInput(artist);\n    const requestParams =`?q=${transformedSearchInput}`;\n    const url = `${baseUrl}${requestParams}`;\n\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': '48ae9bfa21mshf797af22061bc12p1069a4jsn184cf3cad960',\n        'X-RapidAPI-Host': 'deezerdevs-deezer.p.rapidapi.com'\n      }\n    };\n\n    try {\n      const response = await fetch(url, options);\n      if(response.ok){\n        const jsonResponse = await response.json();\n        const songs = jsonResponse.data;\n        return  songs; // ! Important\n      }\n  \n    }catch (error) {\n      console.error(error);\n     }   \n  } \n  \n\n  // consuma promisiunea ce o primim  de la  getSongsbyArtist()\n  const showSongs = async()=>{\n     let songs = await getSongsbyArtist(searchInput);\n     console.log(\"Show Songs: \");\n     console.log(songs); // aici avem arayy (25)\n     //  facem ceva cu promisiunea\n     //let song = songs[0]; // primul obiect song din sirul de 25 songs cu toate atributele\n     //console.log(song);\n\n     // array de obiecte cu atributele specifice ce le vrem\n     const songsArray = []; \n     console.log(\"songs array \");\n     console.log(songsArray);\n     for (let song of songs){\n      let songObject ={\n        id :generateId() ,\n        artist: song.artist.name,\n        title: song.title,\n        album: song.album.title,\n        preview: song.preview,\n       };\n       songsArray.push(songObject);\n       //console.log(songObject); // doar obiectul cu 3 atribute\n\n     }\n     setSongsList(songsArray); // state of the songsLista va fi arrayul creat din songs\n  }\n\n  function handleChangeInput(e){\n     e.preventDefault();\n     setSearchInput(e.target.value);\n  }\n \n\n  // onClickSearch prop pt search button\n  // doar cand apas pe buton vrem sa ceara lista de songs de la pagina web\n  function handleClickSearchButton(e){\n    // previne sa revina la starea initiala , deci nu mai dispare rezultatul\n    e.preventDefault();\n    // consuma promisiunea si schimba starea de la setResultSongs cu raspunsul, adica songs\n    // facem aici cererea la server, altfel, de cate ori tastam o litera in input field\n    // se schimba starea lui searchInput si se face cererea la server automat, app crashes\n    showSongs();// chemam functia async ce a consumat promisiunea intoarsa de la request\n    \n  }\n  \n  // function updates the state of songPlaylist\n  // nu mai tre if aici,doar in handle function\n  function addSongtoPlaylist (song){\n    if(songsPlaylist.includes(song)===false){\n      setSongsPlaylist((prev)=>{\n        return [song, ...prev];\n      })\n    }\n   }\n\n  // + button, cand il apasam , adauga piesa corespunzatoare in Playlist list\n  function handleClickAddSong(id){\n    // let playlist = [];\n    // adaugam un obiect song in state, nu lista, ca si la result. aici una cate una se adauga\n    // in result se adaugau toate odata , deci trebuia creata toata lista odata\n    let playlist = {};\n    for(let i=0; i<songsList.length; i++){\n      if(songsList[i].id === id && songsPlaylist.includes(playlist)===false){\n        //playlist.push(songsList[i]);\n        playlist = songsList[i];\n      }\n    }\n    \n    //setSongsPlaylist(playlist); \n    addSongtoPlaylist(playlist);\n    \n    console.log(\"Songs from playlist:\");\n    console.log(songsPlaylist);\n\n  }\n\n  \n  // JSX expresion to return \n  return (\n    <div style={app}>\n      <h1 style={title}><span style={span}>LISTEN2</span>your favorite<span style={span}>MUSIC</span></h1>\n      <div style={container}>\n        <SearchBar searchInput={searchInput} onChangeInput={handleChangeInput} onClickSearch={handleClickSearchButton} />\n        <div style={resultAndPlaylist}>\n            <SearchResults songs={songsList} onClickHandle={handleClickAddSong}/>\n            <Playlist songs={songsPlaylist}/>\n        </div> \n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}