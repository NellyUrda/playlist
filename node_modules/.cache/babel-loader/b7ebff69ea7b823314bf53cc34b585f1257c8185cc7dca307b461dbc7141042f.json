{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\urdan\\\\playlist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\nimport Playlist from './Playlist';\n//import styles from './App.css';\nimport React, { useState, useEffect } from 'react';\nimport transformInput from './helperFunctions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = {\n  backgroundColor: \"#27415C\",\n  marginTop: -30\n};\nconst title = {\n  color: \"#A2C2E1\",\n  textAlign: \"center\",\n  paddingTop: 50\n};\nconst container = {\n  backgroundColor: \"#A2C2E1\",\n  width: 900,\n  height: 700,\n  marginLeft: 160,\n  marginRight: 160\n};\nconst span = {\n  color: \"#ffff\"\n};\nconst resultAndPlaylist = {\n  display: \"flex\"\n};\n\n// App component este parent pt SearchBar component, da props \nfunction App() {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [resultSongs, setResultSongs] = useState([]);\n\n  // async function, fetch songs list bye artist from rapidapi.com, returns promise \"songs\"\n  const getSongsbyArtist = async artist => {\n    // datas for API request\n    const baseUrl = 'https://deezerdevs-deezer.p.rapidapi.com/search';\n    const transformedSearchInput = transformInput(artist);\n    const requestParams = `?q=${transformedSearchInput}`;\n    const url = `${baseUrl}${requestParams}`;\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': '48ae9bfa21mshf797af22061bc12p1069a4jsn184cf3cad960',\n        'X-RapidAPI-Host': 'deezerdevs-deezer.p.rapidapi.com'\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      if (response.ok) {\n        c;\n        const jsonResponse = await response.json();\n        console.log(jsonResponse.data); // array data: [{}...]\n        const songs = jsonResponse.data;\n        return songs; // ! Important\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // display songs\n  function display(songs) {\n    console.log(\"The list of searched songs: \" + songs);\n  }\n  function handleChangeInput(e) {\n    e.preventDefault();\n    setSearchInput(e.target.value);\n  }\n\n  // onClickSearch prop, Butonul\n  // doar cand apas pe buton vrem sa ceara lista de songs de la pagina web\n  function handleClickSearchButton(e) {\n    // previne sa revina la starea initiala , deci nu mai dispare rezultatul\n    e.preventDefault();\n    // consuma promisiunea si schimba starea de la setResultSongs cu raspunsul, adica songs\n    // facem aici cererea la server, altfel, de cate ori tastam o litera in input field\n    // se schimba starea lui searchInput si se face cererea la server automat\n    getSongsbyArtist(searchInput).then(setResultSongs);\n    // sa vedem in consola lista de songs\n    display(resultSongs);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: app,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: title,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: span,\n        children: \"LISTEN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this), \"your favorite\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: span,\n        children: \"MUSIC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: container,\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchInput: searchInput,\n        onChangeInput: handleChangeInput,\n        onClickSearch: handleClickSearchButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: resultAndPlaylist,\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iF8r4WCJxpboCWfgPsx9tljC0VA=\");\n_c = App;\nexport default App;\n\n// prop pt SearchBar onClickSearch={handleClickSearchButton}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["SearchBar","SearchResults","Playlist","React","useState","useEffect","transformInput","jsxDEV","_jsxDEV","app","backgroundColor","marginTop","title","color","textAlign","paddingTop","container","width","height","marginLeft","marginRight","span","resultAndPlaylist","display","App","_s","searchInput","setSearchInput","resultSongs","setResultSongs","getSongsbyArtist","artist","baseUrl","transformedSearchInput","requestParams","url","options","method","headers","response","fetch","ok","c","jsonResponse","json","console","log","data","songs","error","handleChangeInput","e","preventDefault","target","value","handleClickSearchButton","then","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onChangeInput","onClickSearch","_c","$RefreshReg$"],"sources":["C:/Users/urdan/playlist/src/App.js"],"sourcesContent":["import SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\nimport Playlist from './Playlist';\n//import styles from './App.css';\nimport React, {useState, useEffect} from 'react';\nimport transformInput from './helperFunctions';\n\n\nconst app ={\n   backgroundColor: \"#27415C\",\n   marginTop: -30\n};\n\nconst title= {\n   color: \"#A2C2E1\",\n   textAlign: \"center\",\n   paddingTop: 50\n}\n\nconst container = {\n  backgroundColor: \"#A2C2E1\",\n  width : 900,\n  height: 700,\n  marginLeft: 160,\n  marginRight : 160\n\n}\n\nconst span={\n  color: \"#ffff\"\n}\n\nconst resultAndPlaylist={\n   display: \"flex\",\n   \n}\n\n\n// App component este parent pt SearchBar component, da props \nfunction App() {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [resultSongs, setResultSongs]= useState([]);\n\n// async function, fetch songs list bye artist from rapidapi.com, returns promise \"songs\"\n  const getSongsbyArtist= async(artist) =>{\n    // datas for API request\n    const baseUrl = 'https://deezerdevs-deezer.p.rapidapi.com/search';\n    const transformedSearchInput = transformInput(artist);\n    const requestParams =`?q=${transformedSearchInput}`;\n    const url = `${baseUrl}${requestParams}`;\n\n    const options = {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': '48ae9bfa21mshf797af22061bc12p1069a4jsn184cf3cad960',\n        'X-RapidAPI-Host': 'deezerdevs-deezer.p.rapidapi.com'\n      }\n    };\n\n    try {\n      const response = await fetch(url, options);\n      if(response.ok){\n        c\n     const jsonResponse = await response.json();\n     console.log(jsonResponse.data); // array data: [{}...]\n     const songs = jsonResponse.data;\n     return  songs; // ! Important\n   }\n  \n  }catch (error) {\n      console.error(error);\n   }   \n} \n\n// display songs\nfunction display(songs){\n   console.log(\"The list of searched songs: \" + songs);\n}\n\n\n  function handleChangeInput(e){\n     e.preventDefault();\n     setSearchInput(e.target.value);\n  }\n \n \n  // onClickSearch prop, Butonul\n  // doar cand apas pe buton vrem sa ceara lista de songs de la pagina web\n  function handleClickSearchButton(e){\n    // previne sa revina la starea initiala , deci nu mai dispare rezultatul\n    e.preventDefault();\n    // consuma promisiunea si schimba starea de la setResultSongs cu raspunsul, adica songs\n    // facem aici cererea la server, altfel, de cate ori tastam o litera in input field\n    // se schimba starea lui searchInput si se face cererea la server automat\n    getSongsbyArtist(searchInput).then(setResultSongs);\n    // sa vedem in consola lista de songs\n    display(resultSongs);\n  }\n\n  return (\n    <div style={app}>\n      <h1 style={title}><span style={span}>LISTEN</span>your favorite<span style={span}>MUSIC</span></h1>\n      <div style={container}>\n        <SearchBar searchInput={searchInput} onChangeInput={handleChangeInput} onClickSearch={handleClickSearchButton} />\n        <div style={resultAndPlaylist}>\n          <SearchResults />\n          <Playlist/>\n        </div> \n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n\n// prop pt SearchBar onClickSearch={handleClickSearchButton}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}